{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\haide\\\\Desktop\\\\University\\\\db ai\\\\leetcode-project\\\\front-end\\\\src\\\\components\\\\Contests.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchContests, addContest } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contests = () => {\n  _s();\n  const [contests, setContests] = useState([]);\n  const [newContest, setNewContest] = useState({\n    title: '',\n    description: '',\n    start_time: '',\n    end_time: '',\n    status: ''\n  });\n  useEffect(() => {\n    fetchContests().then(response => setContests(response.data.contests));\n  }, []);\n  const handleAddContest = () => {\n    addContest(newContest).then(() => {\n      setNewContest({\n        title: '',\n        description: '',\n        start_time: '',\n        end_time: '',\n        status: ''\n      });\n      fetchContests().then(response => setContests(response.data.contests));\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: contests.map(contest => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [contest.title, \" - \", contest.description, \" - \", contest.start_time, \" to \", contest.end_time, \" - Status: \", contest.status, \" - Created At: \", contest.created_at]\n      }, contest.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: newContest.title,\n        onChange: e => setNewContest({\n          ...newContest,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Description\",\n        value: newContest.description,\n        onChange: e => setNewContest({\n          ...newContest,\n          description: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        placeholder: \"Start Time\",\n        value: newContest.start_time,\n        onChange: e => setNewContest({\n          ...newContest,\n          start_time: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        placeholder: \"End Time\",\n        value: newContest.end_time,\n        onChange: e => setNewContest({\n          ...newContest,\n          end_time: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Status\",\n        value: newContest.status,\n        onChange: e => setNewContest({\n          ...newContest,\n          status: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddContest,\n        children: \"Add Contest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Contests, \"E3xbEh2Ey1V2tZbfaW0rrvWl/2g=\");\n_c = Contests;\nexport default Contests;\nvar _c;\n$RefreshReg$(_c, \"Contests\");","map":{"version":3,"names":["React","useState","useEffect","fetchContests","addContest","jsxDEV","_jsxDEV","Contests","_s","contests","setContests","newContest","setNewContest","title","description","start_time","end_time","status","then","response","data","handleAddContest","children","fileName","_jsxFileName","lineNumber","columnNumber","map","contest","created_at","id","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/haide/Desktop/University/db ai/leetcode-project/front-end/src/components/Contests.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchContests, addContest } from '../services/api';\r\n\r\nconst Contests = () => {\r\n  const [contests, setContests] = useState([]);\r\n  const [newContest, setNewContest] = useState({ title: '', description: '', start_time: '', end_time: '', status: '' });\r\n\r\n  useEffect(() => {\r\n    fetchContests().then((response) => setContests(response.data.contests));\r\n  }, []);\r\n\r\n  const handleAddContest = () => {\r\n    addContest(newContest).then(() => {\r\n      setNewContest({ title: '', description: '', start_time: '', end_time: '', status: '' });\r\n      fetchContests().then((response) => setContests(response.data.contests));\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Contests</h2>\r\n      <ul>\r\n  {contests.map((contest) => (\r\n    <li key={contest.id}>\r\n      {contest.title} - {contest.description} - {contest.start_time} to {contest.end_time} - Status: {contest.status} - Created At: {contest.created_at}\r\n    </li>\r\n  ))}\r\n</ul>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Title\"\r\n          value={newContest.title}\r\n          onChange={(e) => setNewContest({ ...newContest, title: e.target.value })}\r\n        />\r\n        <textarea\r\n          placeholder=\"Description\"\r\n          value={newContest.description}\r\n          onChange={(e) => setNewContest({ ...newContest, description: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"datetime-local\"\r\n          placeholder=\"Start Time\"\r\n          value={newContest.start_time}\r\n          onChange={(e) => setNewContest({ ...newContest, start_time: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"datetime-local\"\r\n          placeholder=\"End Time\"\r\n          value={newContest.end_time}\r\n          onChange={(e) => setNewContest({ ...newContest, end_time: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Status\"\r\n          value={newContest.status}\r\n          onChange={(e) => setNewContest({ ...newContest, status: e.target.value })}\r\n        />\r\n        <button onClick={handleAddContest}>Add Contest</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contests;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}