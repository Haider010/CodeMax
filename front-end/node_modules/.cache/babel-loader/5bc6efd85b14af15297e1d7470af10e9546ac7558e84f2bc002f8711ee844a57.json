{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\haide\\\\Desktop\\\\University\\\\db ai\\\\leetcode-project\\\\front-end\\\\src\\\\components\\\\SolveContest.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getContestProblems, getContestByID } from \"../services/api\";\nimport { Editor } from \"@monaco-editor/react\";\nimport \"./styles/SolveContest.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SolveContest = () => {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const userLoggedIn = localStorage.getItem(\"userLoggedIn\") === \"true\";\n    if (!userLoggedIn) {\n      // Redirect to login if the user is not logged in\n      navigate(\"/login\");\n    }\n  }, [navigate]);\n  const {\n    contestId\n  } = useParams();\n  const [problems, setProblems] = useState([]);\n  const [error, setError] = useState(null);\n  const [selectedProblemIndex, setSelectedProblemIndex] = useState(0);\n  const [code, setCode] = useState(\"\");\n  const [language, setLanguage] = useState(\"python\");\n  const [submissionResult, setSubmissionResult] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [timeTaken, setTimeTaken] = useState(0); // Time taken in seconds\n  const [remainingTime, setRemainingTime] = useState(0); // Remaining time in seconds\n\n  // Fetch problems and contest data (including end_time)\n  useEffect(() => {\n    getContestProblems(contestId).then(response => {\n      if (response.data.contest_problems) {\n        setProblems(response.data.contest_problems);\n      }\n    }).catch(() => setError(\"Failed to load contest problems.\"));\n\n    // Fetch contest details to get the end_time\n    getContestByID(contestId).then(response => {\n      const endTimeString = response.data.contest[\"End-Time\"];\n\n      // Add :00 for seconds if missing and 'Z' for timezone if not present\n      const formattedEndTimeString = endTimeString.includes(\":\") && !endTimeString.includes(\":00\") ? endTimeString + \":00\" : endTimeString;\n\n      // Ensure the time is in UTC\n      const contestEndTime = new Date(formattedEndTimeString + \"Z\").getTime() - 5 * 60 * 60 * 1000;\n\n      // Set the remaining time (in seconds)\n      setRemainingTime(Math.floor((contestEndTime - new Date().getTime()) / 1000));\n    }).catch(() => setError(\"Failed to load contest details.\"));\n  }, [contestId]);\n\n  // Start a timer and update the time taken every second\n  useEffect(() => {\n    const startTime = localStorage.getItem(\"startTime\");\n    if (startTime) {\n      const interval = setInterval(() => {\n        const currentTime = new Date().getTime();\n        const timeElapsed = Math.floor((currentTime - new Date(startTime).getTime()) / 1000);\n        setTimeTaken(timeElapsed);\n      }, 1000);\n\n      // Clear the interval on unmount\n      return () => clearInterval(interval);\n    }\n  }, []);\n\n  // Start a timer for the remaining time\n  useEffect(() => {\n    if (remainingTime > 0) {\n      const interval = setInterval(() => {\n        setRemainingTime(prevTime => prevTime > 0 ? prevTime - 1 : 0);\n      }, 1000);\n\n      // Clear the interval when the remaining time reaches zero or on unmount\n      return () => clearInterval(interval);\n    }\n  }, [remainingTime]);\n\n  // Format the time in \"hh:mm:ss\" format\n  const formatTime = milliseconds => {\n    const hours = Math.floor(milliseconds / (1000 * 60 * 60));\n    const minutes = Math.floor(milliseconds % (1000 * 60 * 60) / (1000 * 60));\n    const seconds = Math.floor(milliseconds % (1000 * 60) / 1000);\n    return `${hours}:${minutes}:${seconds}`;\n  };\n  const handleTabClick = index => {\n    setSelectedProblemIndex(index);\n    setCode(\"\");\n    setSubmissionResult([]);\n  };\n  const handleCodeSubmit = () => {\n    var _problems$selectedPro;\n    const userLoggedIn = localStorage.getItem(\"userLoggedIn\") === \"true\";\n    if (!userLoggedIn) {\n      setSubmissionResult([{\n        error: \"Please log in to submit code.\"\n      }]);\n      return;\n    }\n    const problemId = (_problems$selectedPro = problems[selectedProblemIndex]) === null || _problems$selectedPro === void 0 ? void 0 : _problems$selectedPro.id;\n    const payload = {\n      code,\n      language\n    };\n    setIsLoading(true);\n    fetch(`http://localhost:5000/submitCode/${problemId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(payload)\n    }).then(response => response.json()).then(data => {\n      if (data.test_case_results) {\n        setSubmissionResult(data.test_case_results);\n      } else if (data.error) {\n        setSubmissionResult([{\n          error: data.error\n        }]);\n      } else {\n        setSubmissionResult([{\n          error: \"Unexpected response format.\"\n        }]);\n      }\n    }).catch(() => setSubmissionResult([{\n      error: \"Submission failed.\"\n    }])).finally(() => setIsLoading(false));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"solve-contest-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contest Problems\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabs\",\n        children: problems.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No problems found for this contest.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this) : problems.map((problem, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab ${selectedProblemIndex === index ? \"active\" : \"\"}`,\n          onClick: () => handleTabClick(index),\n          children: [\"Problem-\", index + 1]\n        }, problem.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), problems.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"problem-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: problems[selectedProblemIndex].title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: problems[selectedProblemIndex].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Difficulty:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, this), \" \", problems[selectedProblemIndex].difficulty]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Example:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 19\n            }, this), \" \", problems[selectedProblemIndex].example]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-taken\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Time Taken: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this), formatTime(timeTaken * 1000), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"remaining-time\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Remaining Time: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 17\n          }, this), formatTime(remainingTime * 1000), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"code-editor-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"editor-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"editor-title\",\n              children: \"Code Editor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"language-select\",\n              value: language,\n              onChange: e => setLanguage(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"python\",\n                children: \"Python\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"javascript\",\n                children: \"JavaScript\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"java\",\n                children: \"Java\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"cpp\",\n                children: \"C++\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"csharp\",\n                children: \"C#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Editor, {\n            height: \"400px\",\n            language: language,\n            value: code,\n            onChange: newValue => setCode(newValue),\n            theme: \"vs-dark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-btn\",\n            onClick: handleCodeSubmit,\n            children: \"Submit Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submission-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Submission Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 31\n          }, this), !isLoading && submissionResult.length > 0 && submissionResult.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"test-case-result\",\n            children: result.error ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: result.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 25\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Input:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 29\n                }, this), \" \", result.input]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Expected Output:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 29\n                }, this), \" \", result.expected_output]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Your Output:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 29\n                }, this), \" \", result.actual_output]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"status\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 29\n                }, this), result.status === \"Accepted\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"status-accepted\",\n                  children: [\"\\u2714\\uFE0F \", result.status]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 31\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"status-rejected\",\n                  children: [\"\\u274C \", result.status]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 31\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Execution Time:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 29\n                }, this), \" \", result.execution_time]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Memory:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 29\n                }, this), \" \", result.memory]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s(SolveContest, \"KUpsTWbfAcjoicW0I/YqKtVS6YI=\", true, function () {\n  return [useParams];\n});\n_c = SolveContest;\nexport default SolveContest;\nvar _c;\n$RefreshReg$(_c, \"SolveContest\");","map":{"version":3,"names":["React","useState","useEffect","useParams","getContestProblems","getContestByID","Editor","jsxDEV","_jsxDEV","Fragment","_Fragment","SolveContest","_s","navigate","useNavigate","userLoggedIn","localStorage","getItem","contestId","problems","setProblems","error","setError","selectedProblemIndex","setSelectedProblemIndex","code","setCode","language","setLanguage","submissionResult","setSubmissionResult","isLoading","setIsLoading","timeTaken","setTimeTaken","remainingTime","setRemainingTime","then","response","data","contest_problems","catch","endTimeString","contest","formattedEndTimeString","includes","contestEndTime","Date","getTime","Math","floor","startTime","interval","setInterval","currentTime","timeElapsed","clearInterval","prevTime","formatTime","milliseconds","hours","minutes","seconds","handleTabClick","index","handleCodeSubmit","_problems$selectedPro","problemId","id","payload","fetch","method","headers","body","JSON","stringify","json","test_case_results","finally","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","problem","onClick","title","description","difficulty","example","value","onChange","e","target","height","newValue","theme","result","input","expected_output","actual_output","status","execution_time","memory","_c","$RefreshReg$"],"sources":["C:/Users/haide/Desktop/University/db ai/leetcode-project/front-end/src/components/SolveContest.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getContestProblems, getContestByID } from \"../services/api\";\r\nimport { Editor } from \"@monaco-editor/react\";\r\nimport \"./styles/SolveContest.css\";\r\n\r\nconst SolveContest = () => {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const userLoggedIn = localStorage.getItem(\"userLoggedIn\") === \"true\";\r\n\r\n    if (!userLoggedIn) {\r\n      // Redirect to login if the user is not logged in\r\n      navigate(\"/login\");\r\n    }\r\n  }, [navigate]);\r\n  const { contestId } = useParams();\r\n  const [problems, setProblems] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [selectedProblemIndex, setSelectedProblemIndex] = useState(0);\r\n  const [code, setCode] = useState(\"\");\r\n  const [language, setLanguage] = useState(\"python\");\r\n  const [submissionResult, setSubmissionResult] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [timeTaken, setTimeTaken] = useState(0); // Time taken in seconds\r\n  const [remainingTime, setRemainingTime] = useState(0); // Remaining time in seconds\r\n\r\n  // Fetch problems and contest data (including end_time)\r\n  useEffect(() => {\r\n    getContestProblems(contestId)\r\n      .then((response) => {\r\n        if (response.data.contest_problems) {\r\n          setProblems(response.data.contest_problems);\r\n        }\r\n      })\r\n      .catch(() => setError(\"Failed to load contest problems.\"));\r\n\r\n    // Fetch contest details to get the end_time\r\n    getContestByID(contestId)\r\n      .then((response) => {\r\n        const endTimeString = response.data.contest[\"End-Time\"];\r\n\r\n        // Add :00 for seconds if missing and 'Z' for timezone if not present\r\n        const formattedEndTimeString =\r\n          endTimeString.includes(\":\") && !endTimeString.includes(\":00\")\r\n            ? endTimeString + \":00\"\r\n            : endTimeString;\r\n\r\n        // Ensure the time is in UTC\r\n        const contestEndTime = new Date(formattedEndTimeString + \"Z\").getTime() - 5 * 60 * 60 * 1000;\r\n\r\n\r\n        // Set the remaining time (in seconds)\r\n        setRemainingTime(\r\n          Math.floor((contestEndTime - new Date().getTime()) / 1000)\r\n        );\r\n      })\r\n      .catch(() => setError(\"Failed to load contest details.\"));\r\n  }, [contestId]);\r\n\r\n  // Start a timer and update the time taken every second\r\n  useEffect(() => {\r\n    const startTime = localStorage.getItem(\"startTime\");\r\n    if (startTime) {\r\n      const interval = setInterval(() => {\r\n        const currentTime = new Date().getTime();\r\n        const timeElapsed = Math.floor(\r\n          (currentTime - new Date(startTime).getTime()) / 1000\r\n        );\r\n        setTimeTaken(timeElapsed);\r\n      }, 1000);\r\n\r\n      // Clear the interval on unmount\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, []);\r\n\r\n  // Start a timer for the remaining time\r\n  useEffect(() => {\r\n    if (remainingTime > 0) {\r\n      const interval = setInterval(() => {\r\n        setRemainingTime((prevTime) => (prevTime > 0 ? prevTime - 1 : 0));\r\n      }, 1000);\r\n\r\n      // Clear the interval when the remaining time reaches zero or on unmount\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [remainingTime]);\r\n\r\n  // Format the time in \"hh:mm:ss\" format\r\n  const formatTime = (milliseconds) => {\r\n    const hours = Math.floor(milliseconds / (1000 * 60 * 60));\r\n    const minutes = Math.floor((milliseconds % (1000 * 60 * 60)) / (1000 * 60));\r\n    const seconds = Math.floor((milliseconds % (1000 * 60)) / 1000);\r\n    return `${hours}:${minutes}:${seconds}`;\r\n  };\r\n\r\n  const handleTabClick = (index) => {\r\n    setSelectedProblemIndex(index);\r\n    setCode(\"\");\r\n    setSubmissionResult([]);\r\n  };\r\n\r\n  const handleCodeSubmit = () => {\r\n    const userLoggedIn = localStorage.getItem(\"userLoggedIn\") === \"true\";\r\n\r\n    if (!userLoggedIn) {\r\n      setSubmissionResult([{ error: \"Please log in to submit code.\" }]);\r\n      return;\r\n    }\r\n\r\n    const problemId = problems[selectedProblemIndex]?.id;\r\n    const payload = { code, language };\r\n\r\n    setIsLoading(true);\r\n    fetch(`http://localhost:5000/submitCode/${problemId}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(payload),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.test_case_results) {\r\n          setSubmissionResult(data.test_case_results);\r\n        } else if (data.error) {\r\n          setSubmissionResult([{ error: data.error }]);\r\n        } else {\r\n          setSubmissionResult([{ error: \"Unexpected response format.\" }]);\r\n        }\r\n      })\r\n      .catch(() => setSubmissionResult([{ error: \"Submission failed.\" }]))\r\n      .finally(() => setIsLoading(false));\r\n  };\r\n\r\n  return (\r\n    <div className=\"solve-contest-container\">\r\n      <h2>Contest Problems</h2>\r\n      {error ? (\r\n        <p className=\"error-message\">{error}</p>\r\n      ) : (\r\n        <div className=\"tabs-container\">\r\n          <div className=\"tabs\">\r\n            {problems.length === 0 ? (\r\n              <p>No problems found for this contest.</p>\r\n            ) : (\r\n              problems.map((problem, index) => (\r\n                <button\r\n                  key={problem.id}\r\n                  className={`tab ${selectedProblemIndex === index ? \"active\" : \"\"}`}\r\n                  onClick={() => handleTabClick(index)}\r\n                >\r\n                  Problem-{index + 1}\r\n                </button>\r\n              ))\r\n            )}\r\n          </div>\r\n\r\n          {problems.length > 0 && (\r\n            <>\r\n              <div className=\"problem-details\">\r\n                <h3>{problems[selectedProblemIndex].title}</h3>\r\n                <p>{problems[selectedProblemIndex].description}</p>\r\n                <p>\r\n                  <strong>Difficulty:</strong>{\" \"}\r\n                  {problems[selectedProblemIndex].difficulty}\r\n                </p>\r\n                <p>\r\n                  <strong>Example:</strong>{\" \"}\r\n                  {problems[selectedProblemIndex].example}\r\n                </p>\r\n              </div>\r\n\r\n              {/* Time Taken Display */}\r\n              <div className=\"time-taken\">\r\n                <strong>Time Taken: </strong>\r\n                {formatTime(timeTaken * 1000)} {/* Format time taken */}\r\n              </div>\r\n\r\n              {/* Remaining Time Display */}\r\n              <div className=\"remaining-time\">\r\n                <strong>Remaining Time: </strong>\r\n                {formatTime(remainingTime * 1000)} {/* Format remaining time */}\r\n              </div>\r\n\r\n              {/* Code Editor */}\r\n              <div className=\"code-editor-container\">\r\n                <div className=\"editor-header\">\r\n                  <span className=\"editor-title\">Code Editor</span>\r\n                  <select\r\n                    className=\"language-select\"\r\n                    value={language}\r\n                    onChange={(e) => setLanguage(e.target.value)}\r\n                  >\r\n                    <option value=\"python\">Python</option>\r\n                    <option value=\"javascript\">JavaScript</option>\r\n                    <option value=\"java\">Java</option>\r\n                    <option value=\"cpp\">C++</option>\r\n                    <option value=\"csharp\">C#</option>\r\n                  </select>\r\n                </div>\r\n                <Editor\r\n                  height=\"400px\"\r\n                  language={language}\r\n                  value={code}\r\n                  onChange={(newValue) => setCode(newValue)}\r\n                  theme=\"vs-dark\"\r\n                />\r\n                <button className=\"submit-btn\" onClick={handleCodeSubmit}>\r\n                  Submit Code\r\n                </button>\r\n              </div>\r\n\r\n              {/* Submission Results */}\r\n              <div className=\"submission-results\">\r\n                <h3>Submission Results</h3>\r\n                {isLoading && <div className=\"loading-spinner\"></div>}\r\n                {!isLoading &&\r\n                  submissionResult.length > 0 &&\r\n                  submissionResult.map((result, index) => (\r\n                    <div key={index} className=\"test-case-result\">\r\n                      {result.error ? (\r\n                        <p className=\"error\">{result.error}</p>\r\n                      ) : (\r\n                        <>\r\n                          <p>\r\n                            <strong>Input:</strong> {result.input}\r\n                          </p>\r\n                          <p>\r\n                            <strong>Expected Output:</strong>{\" \"}\r\n                            {result.expected_output}\r\n                          </p>\r\n                          <p>\r\n                            <strong>Your Output:</strong> {result.actual_output}\r\n                          </p>\r\n                          <p className=\"status\">\r\n                            <strong>Status:</strong>\r\n                            {result.status === \"Accepted\" ? (\r\n                              <span className=\"status-accepted\">\r\n                                ✔️ {result.status}\r\n                              </span>\r\n                            ) : (\r\n                              <span className=\"status-rejected\">\r\n                                ❌ {result.status}\r\n                              </span>\r\n                            )}\r\n                          </p>\r\n                          <p>\r\n                            <strong>Execution Time:</strong>{\" \"}\r\n                            {result.execution_time}\r\n                          </p>\r\n                          <p>\r\n                            <strong>Memory:</strong> {result.memory}\r\n                          </p>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SolveContest;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}