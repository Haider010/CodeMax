{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\haide\\\\Desktop\\\\University\\\\db ai\\\\leetcode-project\\\\front-end\\\\src\\\\components\\\\SolveContest.js\",\n  _s2 = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import { getContestProblems } from '../services/api';\n\n// const SolveContest = () => {\n//   const { contestId } = useParams();\n//   const [problems, setProblems] = useState([]);\n//   const [error, setError] = useState(null);\n//   const [selectedProblemIndex, setSelectedProblemIndex] = useState(0); // To track the selected tab\n\n//   useEffect(() => {\n//     getContestProblems(contestId)\n//       .then((response) => {\n//         if (response.data.contest_problems) {\n//           setProblems(response.data.contest_problems);\n//         }\n//       })\n//       .catch((err) => setError('Failed to load contest problems.'));\n//   }, [contestId]);\n\n//   const handleTabClick = (index) => {\n//     setSelectedProblemIndex(index); // Set selected tab on click\n//   };\n\n//   return (\n//     <div className=\"solve-contest-container\">\n//       <h2>Contest Problems</h2>\n//       {error ? (\n//         <p className=\"error-message\">{error}</p>\n//       ) : (\n//         <div className=\"tabs-container\">\n//           <div className=\"tabs\">\n//             {problems.length === 0 ? (\n//               <p>No problems found for this contest.</p>\n//             ) : (\n//               problems.map((problem, index) => (\n//                 <button\n//                   key={problem.id}\n//                   className={`tab ${selectedProblemIndex === index ? 'active' : ''}`}\n//                   onClick={() => handleTabClick(index)}\n//                 >\n//                   Problem-{index + 1}\n//                 </button>\n//               ))\n//             )}\n//           </div>\n//           <div className=\"problem-details\">\n//             {problems.length > 0 && (\n//               <div>\n//                 <h3>{problems[selectedProblemIndex].title}</h3>\n//                 <p>{problems[selectedProblemIndex].description}</p>\n//                 <p><strong>Difficulty:</strong> {problems[selectedProblemIndex].difficulty}</p>\n//                 <p><strong>Example:</strong> {problems[selectedProblemIndex].example}</p>\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default SolveContest;\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getContestProblems } from '../services/api'; // Assuming this is where you fetch problem data\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProblemDetails = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    id\n  } = useParams();\n  const [problem, setProblem] = useState(null);\n  const [code, setCode] = useState('');\n  const [language, setLanguage] = useState('python');\n  const [submissionResult, setSubmissionResult] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const SolveContest = () => {\n    _s();\n    const {\n      contestId\n    } = useParams();\n    const [problems, setProblems] = useState([]);\n    const [error, setError] = useState(null);\n    const [selectedProblemIndex, setSelectedProblemIndex] = useState(0); // To track the selected tab\n\n    useEffect(() => {\n      getContestProblems(contestId).then(response => {\n        if (response.data.contest_problems) {\n          setProblems(response.data.contest_problems);\n        }\n      }).catch(err => setError('Failed to load contest problems.'));\n      const handleCodeSubmit = () => {\n        const userLoggedIn = localStorage.getItem('userLoggedIn') === 'true';\n        if (!userLoggedIn) {\n          setSubmissionResult([{\n            error: 'Please log in to submit code.'\n          }]);\n          return;\n        }\n        const payload = {\n          code,\n          language\n        };\n        setIsLoading(true);\n        fetch(`http://localhost:5000/submitCode/${id}`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(payload)\n        }).then(response => response.json()).then(data => {\n          if (data.test_case_results) {\n            setSubmissionResult(data.test_case_results);\n          } else if (data.error) {\n            setSubmissionResult([{\n              error: data.error\n            }]);\n          } else {\n            setSubmissionResult([{\n              error: 'Unexpected response format.'\n            }]);\n          }\n        }).catch(() => setSubmissionResult([{\n          error: 'Submission failed.'\n        }])).finally(() => setIsLoading(false));\n      };\n      if (error) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 12\n        }, this);\n      }\n      if (!problem) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading problem details...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 12\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"problem-page\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"problem-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"problem-title\",\n            children: problem.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `problem-difficulty ${problem.difficulty.toLowerCase()}`,\n            children: problem.difficulty\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"problem-description\",\n            children: problem.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 9\n          }, this), problem.example_input_output && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"problem-example\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Example\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n              children: problem.example_input_output\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submission-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"code-editor-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"editor-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"editor-title\",\n                children: \"Code Editor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"language-select\",\n                value: language,\n                onChange: e => setLanguage(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"python\",\n                  children: \"Python\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"javascript\",\n                  children: \"JavaScript\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"java\",\n                  children: \"Java\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"cpp\",\n                  children: \"C++\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"csharp\",\n                  children: \"C#\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Editor, {\n              height: \"400px\",\n              language: language,\n              value: code,\n              onChange: newValue => setCode(newValue),\n              theme: \"vs-dark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"submit-btn\",\n              onClick: handleCodeSubmit,\n              children: \"Submit Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"submission-results\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Submission Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 11\n            }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 25\n            }, this), !isLoading && submissionResult.length > 0 && submissionResult.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"test-case-result\",\n              children: result.error ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error\",\n                children: result.error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Input:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 24\n                  }, this), \" \", result.input]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Expected Output:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 24\n                  }, this), \" \", result.expected_output]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Your Output:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 24\n                  }, this), \" \", result.actual_output]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"status\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Status:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 23\n                  }, this), result.status === 'Accepted' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"status-accepted\",\n                    children: [\"\\u2714\\uFE0F \", result.status]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"status-rejected\",\n                    children: [\"\\u274C \", result.status]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Execution Time:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 24\n                  }, this), \" \", result.execution_time]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Memory:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 24\n                  }, this), \" \", result.memory]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 5\n      }, this);\n    });\n  };\n  _s(SolveContest, \"avvoHsyDsXT7ZkK6/2az/ptQ/fI=\", false, function () {\n    return [useParams];\n  });\n};\n_s2(ProblemDetails, \"LfWb4Viqu89phsxjtQhu8fjmrVs=\", false, function () {\n  return [useParams];\n});\n_c = ProblemDetails;\nexport default ProblemDetails;\nvar _c;\n$RefreshReg$(_c, \"ProblemDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","getContestProblems","jsxDEV","_jsxDEV","Fragment","_Fragment","ProblemDetails","_s2","_s","$RefreshSig$","id","problem","setProblem","code","setCode","language","setLanguage","submissionResult","setSubmissionResult","isLoading","setIsLoading","error","setError","SolveContest","contestId","problems","setProblems","selectedProblemIndex","setSelectedProblemIndex","then","response","data","contest_problems","catch","err","handleCodeSubmit","userLoggedIn","localStorage","getItem","payload","fetch","method","headers","body","JSON","stringify","json","test_case_results","finally","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","difficulty","toLowerCase","description","example_input_output","value","onChange","e","target","Editor","height","newValue","theme","onClick","length","map","result","index","input","expected_output","actual_output","status","execution_time","memory","_c","$RefreshReg$"],"sources":["C:/Users/haide/Desktop/University/db ai/leetcode-project/front-end/src/components/SolveContest.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import { getContestProblems } from '../services/api';\r\n\r\n// const SolveContest = () => {\r\n//   const { contestId } = useParams();\r\n//   const [problems, setProblems] = useState([]);\r\n//   const [error, setError] = useState(null);\r\n//   const [selectedProblemIndex, setSelectedProblemIndex] = useState(0); // To track the selected tab\r\n\r\n//   useEffect(() => {\r\n//     getContestProblems(contestId)\r\n//       .then((response) => {\r\n//         if (response.data.contest_problems) {\r\n//           setProblems(response.data.contest_problems);\r\n//         }\r\n//       })\r\n//       .catch((err) => setError('Failed to load contest problems.'));\r\n//   }, [contestId]);\r\n\r\n//   const handleTabClick = (index) => {\r\n//     setSelectedProblemIndex(index); // Set selected tab on click\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"solve-contest-container\">\r\n//       <h2>Contest Problems</h2>\r\n//       {error ? (\r\n//         <p className=\"error-message\">{error}</p>\r\n//       ) : (\r\n//         <div className=\"tabs-container\">\r\n//           <div className=\"tabs\">\r\n//             {problems.length === 0 ? (\r\n//               <p>No problems found for this contest.</p>\r\n//             ) : (\r\n//               problems.map((problem, index) => (\r\n//                 <button\r\n//                   key={problem.id}\r\n//                   className={`tab ${selectedProblemIndex === index ? 'active' : ''}`}\r\n//                   onClick={() => handleTabClick(index)}\r\n//                 >\r\n//                   Problem-{index + 1}\r\n//                 </button>\r\n//               ))\r\n//             )}\r\n//           </div>\r\n//           <div className=\"problem-details\">\r\n//             {problems.length > 0 && (\r\n//               <div>\r\n//                 <h3>{problems[selectedProblemIndex].title}</h3>\r\n//                 <p>{problems[selectedProblemIndex].description}</p>\r\n//                 <p><strong>Difficulty:</strong> {problems[selectedProblemIndex].difficulty}</p>\r\n//                 <p><strong>Example:</strong> {problems[selectedProblemIndex].example}</p>\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SolveContest;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getContestProblems } from '../services/api'; // Assuming this is where you fetch problem data\r\n\r\nconst ProblemDetails = () => {\r\n  const { id } = useParams();\r\n  const [problem, setProblem] = useState(null);\r\n  const [code, setCode] = useState('');\r\n  const [language, setLanguage] = useState('python');\r\n  const [submissionResult, setSubmissionResult] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const SolveContest = () => {\r\n  const { contestId } = useParams();\r\n  const [problems, setProblems] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [selectedProblemIndex, setSelectedProblemIndex] = useState(0); // To track the selected tab\r\n\r\n  useEffect(() => {\r\n    getContestProblems(contestId)\r\n      .then((response) => {\r\n        if (response.data.contest_problems) {\r\n          setProblems(response.data.contest_problems);\r\n        }\r\n      })\r\n      .catch((err) => setError('Failed to load contest problems.'));\r\n\r\n  const handleCodeSubmit = () => {\r\n    const userLoggedIn = localStorage.getItem('userLoggedIn') === 'true';\r\n\r\n    if (!userLoggedIn) {\r\n      setSubmissionResult([{ error: 'Please log in to submit code.' }]);\r\n      return;\r\n    }\r\n\r\n    const payload = { code, language };\r\n\r\n    setIsLoading(true);\r\n    fetch(`http://localhost:5000/submitCode/${id}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(payload),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.test_case_results) {\r\n          setSubmissionResult(data.test_case_results);\r\n        } else if (data.error) {\r\n          setSubmissionResult([{ error: data.error }]);\r\n        } else {\r\n          setSubmissionResult([{ error: 'Unexpected response format.' }]);\r\n        }\r\n      })\r\n      .catch(() => setSubmissionResult([{ error: 'Submission failed.' }]))\r\n      .finally(() => setIsLoading(false));\r\n  };\r\n\r\n  if (error) {\r\n    return <div className=\"error\">{error}</div>;\r\n  }\r\n\r\n  if (!problem) {\r\n    return <div>Loading problem details...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"problem-page\">\r\n      {/* Problem Details */}\r\n      <div className=\"problem-card\">\r\n        <h2 className=\"problem-title\">{problem.title}</h2>\r\n        <p className={`problem-difficulty ${problem.difficulty.toLowerCase()}`}>{problem.difficulty}</p>\r\n        <p className=\"problem-description\">{problem.description}</p>\r\n        {problem.example_input_output && (\r\n          <div className=\"problem-example\">\r\n            <h3>Example</h3>\r\n            <pre>{problem.example_input_output}</pre>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Submission Section */}\r\n      <div className=\"submission-container\">\r\n        <div className=\"code-editor-container\">\r\n          <div className=\"editor-header\">\r\n            <span className=\"editor-title\">Code Editor</span>\r\n            <select\r\n              className=\"language-select\"\r\n              value={language}\r\n              onChange={(e) => setLanguage(e.target.value)}\r\n            >\r\n              <option value=\"python\">Python</option>\r\n              <option value=\"javascript\">JavaScript</option>\r\n              <option value=\"java\">Java</option>\r\n              <option value=\"cpp\">C++</option>\r\n              <option value=\"csharp\">C#</option>\r\n            </select>\r\n          </div>\r\n          <Editor\r\n            height=\"400px\"\r\n            language={language}\r\n            value={code}\r\n            onChange={(newValue) => setCode(newValue)}\r\n            theme=\"vs-dark\"\r\n          />\r\n          <button className=\"submit-btn\" onClick={handleCodeSubmit}>\r\n            Submit Code\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"submission-results\">\r\n          <h3>Submission Results</h3>\r\n          {isLoading && <div className=\"loading-spinner\"></div>}\r\n          {!isLoading && submissionResult.length > 0 && (\r\n            submissionResult.map((result, index) => (\r\n              <div key={index} className=\"test-case-result\">\r\n                {result.error ? (\r\n                  <p className=\"error\">{result.error}</p>\r\n                ) : (\r\n                  <>\r\n                    <p><strong>Input:</strong> {result.input}</p>\r\n                    <p><strong>Expected Output:</strong> {result.expected_output}</p>\r\n                    <p><strong>Your Output:</strong> {result.actual_output}</p>\r\n                    <p className=\"status\">\r\n                      <strong>Status:</strong>\r\n                      {result.status === 'Accepted' ? (\r\n                        <span className=\"status-accepted\">\r\n                          ✔️ {result.status}\r\n                        </span>\r\n                      ) : (\r\n                        <span className=\"status-rejected\">\r\n                          ❌ {result.status}\r\n                        </span>\r\n                      )}\r\n                    </p>\r\n                    <p><strong>Execution Time:</strong> {result.execution_time}</p>\r\n                    <p><strong>Memory:</strong> {result.memory}</p>\r\n                  </>\r\n                )}\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  });\r\n  }}\r\nexport default ProblemDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}