{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\haide\\\\Desktop\\\\University\\\\db ai\\\\leetcode-project\\\\front-end\\\\src\\\\components\\\\SolveContest.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getContestProblems, getContestByID } from \"../services/api\";\nimport { Editor } from \"@monaco-editor/react\";\nimport { useNavigate } from 'react-router-dom';\nimport \"./styles/SolveContest.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SolveContest = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    contestId\n  } = useParams();\n  const [problems, setProblems] = useState([]);\n  const [error, setError] = useState(null);\n  const [selectedProblemIndex, setSelectedProblemIndex] = useState(0);\n  const [code, setCode] = useState(\"\");\n  const [language, setLanguage] = useState(\"python\");\n  const [submissionResult, setSubmissionResult] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [timeTaken, setTimeTaken] = useState(0);\n  const [remainingTime, setRemainingTime] = useState(0);\n  const [acceptedCount, setAcceptedCount] = useState(0);\n  useEffect(() => {\n    const userLoggedIn = localStorage.getItem(\"userLoggedIn\") === \"true\";\n    if (!userLoggedIn) {\n      // Redirect to login if the user is not logged in\n      navigate(\"/login\");\n    } else {\n      // Get the contestId from useParams\n      const contestId = contestId;\n      const userName = localStorage.getItem(\"userName\");\n      if (contestId && userName) {\n        fetch(`http://localhost:5000/has_finished_contest?contestId=${contestId}&userName=${userName}`).then(response => response.json()).then(data => {\n          if (data.finished) {\n            // Redirect to another page (e.g., home page or contest finished page)\n            navigate(\"/contestFinished\");\n          }\n        }).catch(() => {\n          // Handle error (optional)\n          console.log(\"Error checking contest status.\");\n        });\n      }\n    }\n  }, [contestId, navigate]);\n\n  // Count of accepted submissions\n\n  useEffect(() => {\n    getContestProblems(contestId).then(response => {\n      if (response.data.contest_problems) {\n        setProblems(response.data.contest_problems);\n      }\n    }).catch(() => setError(\"Failed to load contest problems.\"));\n    getContestByID(contestId).then(response => {\n      const endTimeString = response.data.contest[\"End-Time\"];\n      const formattedEndTimeString = endTimeString.includes(\":\") && !endTimeString.includes(\":00\") ? endTimeString + \":00\" : endTimeString;\n      const contestEndTime = new Date(formattedEndTimeString + \"Z\").getTime();\n      setRemainingTime(Math.floor((contestEndTime - new Date().getTime()) / 1000));\n    }).catch(() => setError(\"Failed to load contest details.\"));\n  }, [contestId]);\n  useEffect(() => {\n    const startTime = localStorage.getItem(\"startTime\");\n    if (startTime) {\n      const interval = setInterval(() => {\n        const currentTime = new Date().getTime();\n        const timeElapsed = Math.floor((currentTime - new Date(startTime).getTime()) / 1000);\n        setTimeTaken(timeElapsed);\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, []);\n  useEffect(() => {\n    if (remainingTime > 0) {\n      const interval = setInterval(() => {\n        setRemainingTime(prevTime => prevTime > 0 ? prevTime - 1 : 0);\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [remainingTime]);\n  const formatTime = milliseconds => {\n    const hours = Math.floor(milliseconds / (1000 * 60 * 60));\n    const minutes = Math.floor(milliseconds % (1000 * 60 * 60) / (1000 * 60));\n    const seconds = Math.floor(milliseconds % (1000 * 60) / 1000);\n    return `${hours}:${minutes}:${seconds}`;\n  };\n  const handleTabClick = index => {\n    setSelectedProblemIndex(index);\n    setCode(\"\");\n    setSubmissionResult([]);\n  };\n  const handleCodeSubmit = () => {\n    var _problems$selectedPro;\n    const userLoggedIn = localStorage.getItem(\"userLoggedIn\") === \"true\";\n    if (!userLoggedIn) {\n      setSubmissionResult([{\n        error: \"Please log in to submit code.\"\n      }]);\n      return;\n    }\n    const problemId = (_problems$selectedPro = problems[selectedProblemIndex]) === null || _problems$selectedPro === void 0 ? void 0 : _problems$selectedPro.id;\n    const payload = {\n      code,\n      language\n    };\n    setIsLoading(true);\n    fetch(`http://localhost:5000/submitCode/${problemId}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(payload)\n    }).then(response => response.json()).then(data => {\n      if (data.test_case_results) {\n        setSubmissionResult(data.test_case_results);\n\n        // Count accepted submissions\n        const accepted = data.test_case_results.some(result => result.status === \"Accepted\");\n        if (accepted) {\n          setAcceptedCount(prevCount => prevCount + 1);\n        }\n      } else if (data.error) {\n        setSubmissionResult([{\n          error: data.error\n        }]);\n      } else {\n        setSubmissionResult([{\n          error: \"Unexpected response format.\"\n        }]);\n      }\n    }).catch(() => setSubmissionResult([{\n      error: \"Submission failed.\"\n    }])).finally(() => setIsLoading(false));\n  };\n  const handleFinishContest = () => {\n    // Retrieve the user's name from localStorage\n    const userName = localStorage.getItem(\"userName\");\n\n    // Prepare the payload including the user's name\n    const payload = {\n      contestId: contestId,\n      totalTimeTaken: timeTaken,\n      acceptedSubmissions: acceptedCount,\n      userName: userName // Add user's name here\n    };\n\n    // Send the data to the backend\n    fetch(\"http://localhost:5000/finishContest\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(payload)\n    }).then(response => response.json()).then(data => {\n      if (data.success) {\n        alert(\"Contest finished! Your results have been saved.\");\n      } else {\n        alert(\"Failed to finish the contest. Try again.\");\n      }\n    }).catch(() => alert(\"Error occurred while finishing the contest.\"));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"solve-contest-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contest Problems\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabs\",\n        children: problems.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No problems found for this contest.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }, this) : problems.map((problem, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab ${selectedProblemIndex === index ? \"active\" : \"\"}`,\n          onClick: () => handleTabClick(index),\n          children: [\"Problem-\", index + 1]\n        }, problem.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-section\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"finish-button\",\n          onClick: handleFinishContest,\n          children: \"Finish Contest \\uD83C\\uDF89\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), problems.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"problem-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: problems[selectedProblemIndex].title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: problems[selectedProblemIndex].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Difficulty:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this), \" \", problems[selectedProblemIndex].difficulty]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Example:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 19\n            }, this), \" \", problems[selectedProblemIndex].example]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-taken\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Time Taken: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 17\n          }, this), formatTime(timeTaken * 1000)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"remaining-time\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Remaining Time: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this), formatTime(remainingTime * 1000)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"code-editor-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"editor-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"editor-title\",\n              children: \"Code Editor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"language-select\",\n              value: language,\n              onChange: e => setLanguage(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"python\",\n                children: \"Python\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"javascript\",\n                children: \"JavaScript\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"java\",\n                children: \"Java\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"cpp\",\n                children: \"C++\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"csharp\",\n                children: \"C#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Editor, {\n            height: \"400px\",\n            language: language,\n            value: code,\n            onChange: newValue => setCode(newValue),\n            theme: \"vs-dark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-btn\",\n            onClick: handleCodeSubmit,\n            children: \"Submit Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submission-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Submission Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 17\n          }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 31\n          }, this), !isLoading && submissionResult.length > 0 && submissionResult.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"test-case-result\",\n            children: result.error ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: result.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 25\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Input:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 29\n                }, this), \" \", result.input]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Expected Output:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 29\n                }, this), \" \", result.expected_output]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Your Output:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 29\n                }, this), \" \", result.actual_output]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"status\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 29\n                }, this), result.status === \"Accepted\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"status-accepted\",\n                  children: [\"\\u2714\\uFE0F \", result.status]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 31\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"status-rejected\",\n                  children: [\"\\u274C \", result.status]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 31\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Execution Time:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 29\n                }, this), \" \", result.execution_time]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Memory:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 29\n                }, this), \" \", result.memory]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n};\n_s(SolveContest, \"f8495cXA7Y0V0/Iuxqe2PJOhJTs=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = SolveContest;\nexport default SolveContest;\nvar _c;\n$RefreshReg$(_c, \"SolveContest\");","map":{"version":3,"names":["React","useState","useEffect","useParams","getContestProblems","getContestByID","Editor","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","SolveContest","_s","navigate","contestId","problems","setProblems","error","setError","selectedProblemIndex","setSelectedProblemIndex","code","setCode","language","setLanguage","submissionResult","setSubmissionResult","isLoading","setIsLoading","timeTaken","setTimeTaken","remainingTime","setRemainingTime","acceptedCount","setAcceptedCount","userLoggedIn","localStorage","getItem","userName","fetch","then","response","json","data","finished","catch","console","log","contest_problems","endTimeString","contest","formattedEndTimeString","includes","contestEndTime","Date","getTime","Math","floor","startTime","interval","setInterval","currentTime","timeElapsed","clearInterval","prevTime","formatTime","milliseconds","hours","minutes","seconds","handleTabClick","index","handleCodeSubmit","_problems$selectedPro","problemId","id","payload","method","headers","body","JSON","stringify","test_case_results","accepted","some","result","status","prevCount","finally","handleFinishContest","totalTimeTaken","acceptedSubmissions","success","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","problem","onClick","title","description","difficulty","example","value","onChange","e","target","height","newValue","theme","input","expected_output","actual_output","execution_time","memory","_c","$RefreshReg$"],"sources":["C:/Users/haide/Desktop/University/db ai/leetcode-project/front-end/src/components/SolveContest.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getContestProblems, getContestByID } from \"../services/api\";\r\nimport { Editor } from \"@monaco-editor/react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport \"./styles/SolveContest.css\";\r\n\r\nconst SolveContest = () => {\r\n  const navigate = useNavigate();\r\n  const { contestId } = useParams();\r\n  const [problems, setProblems] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [selectedProblemIndex, setSelectedProblemIndex] = useState(0);\r\n  const [code, setCode] = useState(\"\");\r\n  const [language, setLanguage] = useState(\"python\");\r\n  const [submissionResult, setSubmissionResult] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [timeTaken, setTimeTaken] = useState(0);\r\n  const [remainingTime, setRemainingTime] = useState(0);\r\n  const [acceptedCount, setAcceptedCount] = useState(0);\r\n  useEffect(() => {\r\n    const userLoggedIn = localStorage.getItem(\"userLoggedIn\") === \"true\";\r\n  \r\n    if (!userLoggedIn) {\r\n      // Redirect to login if the user is not logged in\r\n      navigate(\"/login\");\r\n    } else {\r\n      // Get the contestId from useParams\r\n      const contestId  = contestId;\r\n      const userName = localStorage.getItem(\"userName\");\r\n  \r\n      if (contestId && userName) {\r\n        fetch(`http://localhost:5000/has_finished_contest?contestId=${contestId}&userName=${userName}`)\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            if (data.finished) {\r\n              // Redirect to another page (e.g., home page or contest finished page)\r\n              navigate(\"/contestFinished\");\r\n            }\r\n          })\r\n          .catch(() => {\r\n            // Handle error (optional)\r\n            console.log(\"Error checking contest status.\");\r\n          });\r\n      }\r\n    }\r\n  }, [contestId,navigate]);\r\n  \r\n  \r\n\r\n   // Count of accepted submissions\r\n\r\n  useEffect(() => {\r\n    getContestProblems(contestId)\r\n      .then((response) => {\r\n        if (response.data.contest_problems) {\r\n          setProblems(response.data.contest_problems);\r\n        }\r\n      })\r\n      .catch(() => setError(\"Failed to load contest problems.\"));\r\n\r\n    getContestByID(contestId)\r\n      .then((response) => {\r\n        const endTimeString = response.data.contest[\"End-Time\"];\r\n        const formattedEndTimeString =\r\n          endTimeString.includes(\":\") && !endTimeString.includes(\":00\")\r\n            ? endTimeString + \":00\"\r\n            : endTimeString;\r\n        const contestEndTime = new Date(formattedEndTimeString + \"Z\").getTime();\r\n        setRemainingTime(\r\n          Math.floor((contestEndTime - new Date().getTime()) / 1000)\r\n        );\r\n      })\r\n      .catch(() => setError(\"Failed to load contest details.\"));\r\n  }, [contestId]);\r\n\r\n  useEffect(() => {\r\n    const startTime = localStorage.getItem(\"startTime\");\r\n    if (startTime) {\r\n      const interval = setInterval(() => {\r\n        const currentTime = new Date().getTime();\r\n        const timeElapsed = Math.floor(\r\n          (currentTime - new Date(startTime).getTime()) / 1000\r\n        );\r\n        setTimeTaken(timeElapsed);\r\n      }, 1000);\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (remainingTime > 0) {\r\n      const interval = setInterval(() => {\r\n        setRemainingTime((prevTime) => (prevTime > 0 ? prevTime - 1 : 0));\r\n      }, 1000);\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [remainingTime]);\r\n\r\n  const formatTime = (milliseconds) => {\r\n    const hours = Math.floor(milliseconds / (1000 * 60 * 60));\r\n    const minutes = Math.floor((milliseconds % (1000 * 60 * 60)) / (1000 * 60));\r\n    const seconds = Math.floor((milliseconds % (1000 * 60)) / 1000);\r\n    return `${hours}:${minutes}:${seconds}`;\r\n  };\r\n\r\n  const handleTabClick = (index) => {\r\n    setSelectedProblemIndex(index);\r\n    setCode(\"\");\r\n    setSubmissionResult([]);\r\n  };\r\n\r\n  const handleCodeSubmit = () => {\r\n    const userLoggedIn = localStorage.getItem(\"userLoggedIn\") === \"true\";\r\n\r\n    if (!userLoggedIn) {\r\n      setSubmissionResult([{ error: \"Please log in to submit code.\" }]);\r\n      return;\r\n    }\r\n\r\n    const problemId = problems[selectedProblemIndex]?.id;\r\n    const payload = { code, language };\r\n\r\n    setIsLoading(true);\r\n    fetch(`http://localhost:5000/submitCode/${problemId}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(payload),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.test_case_results) {\r\n          setSubmissionResult(data.test_case_results);\r\n\r\n          // Count accepted submissions\r\n          const accepted = data.test_case_results.some(\r\n            (result) => result.status === \"Accepted\"\r\n          );\r\n          if (accepted) {\r\n            setAcceptedCount((prevCount) => prevCount + 1);\r\n          }\r\n        } else if (data.error) {\r\n          setSubmissionResult([{ error: data.error }]);\r\n        } else {\r\n          setSubmissionResult([{ error: \"Unexpected response format.\" }]);\r\n        }\r\n      })\r\n      .catch(() => setSubmissionResult([{ error: \"Submission failed.\" }]))\r\n      .finally(() => setIsLoading(false));\r\n  };\r\n\r\n  const handleFinishContest = () => {\r\n    // Retrieve the user's name from localStorage\r\n    const userName = localStorage.getItem(\"userName\");\r\n  \r\n    // Prepare the payload including the user's name\r\n    const payload = {\r\n      contestId: contestId,\r\n      totalTimeTaken: timeTaken,\r\n      acceptedSubmissions: acceptedCount,\r\n      userName: userName, // Add user's name here\r\n    };\r\n  \r\n    // Send the data to the backend\r\n    fetch(\"http://localhost:5000/finishContest\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(payload),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.success) {\r\n          alert(\"Contest finished! Your results have been saved.\");\r\n        } else {\r\n          alert(\"Failed to finish the contest. Try again.\");\r\n        }\r\n      })\r\n      .catch(() => alert(\"Error occurred while finishing the contest.\"));\r\n  };\r\n  \r\n\r\n  return (\r\n    \r\n    <div className=\"solve-contest-container\">\r\n      <h2>Contest Problems</h2>\r\n      {error ? (\r\n        <p className=\"error-message\">{error}</p>\r\n      ) : (\r\n        <div className=\"tabs-container\">\r\n          <div className=\"tabs\">\r\n            {problems.length === 0 ? (\r\n              <p>No problems found for this contest.</p>\r\n            ) : (\r\n              problems.map((problem, index) => (\r\n                <button\r\n                  key={problem.id}\r\n                  className={`tab ${selectedProblemIndex === index ? \"active\" : \"\"}`}\r\n                  onClick={() => handleTabClick(index)}\r\n                >\r\n                  Problem-{index + 1}\r\n                </button>\r\n              ))\r\n            )}\r\n          </div>\r\n          <div className=\"top-section\">\r\n        <button className=\"finish-button\" onClick={handleFinishContest}>\r\n          Finish Contest 🎉\r\n        </button>\r\n      </div>\r\n          {problems.length > 0 && (\r\n            <>\r\n              <div className=\"problem-details\">\r\n                <h3>{problems[selectedProblemIndex].title}</h3>\r\n                <p>{problems[selectedProblemIndex].description}</p>\r\n                <p>\r\n                  <strong>Difficulty:</strong>{\" \"}\r\n                  {problems[selectedProblemIndex].difficulty}\r\n                </p>\r\n                <p>\r\n                  <strong>Example:</strong>{\" \"}\r\n                  {problems[selectedProblemIndex].example}\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"time-taken\">\r\n                <strong>Time Taken: </strong>\r\n                {formatTime(timeTaken * 1000)}\r\n              </div>\r\n\r\n              <div className=\"remaining-time\">\r\n                <strong>Remaining Time: </strong>\r\n                {formatTime(remainingTime * 1000)}\r\n              </div>\r\n\r\n              <div className=\"code-editor-container\">\r\n                <div className=\"editor-header\">\r\n                  <span className=\"editor-title\">Code Editor</span>\r\n                  <select\r\n                    className=\"language-select\"\r\n                    value={language}\r\n                    onChange={(e) => setLanguage(e.target.value)}\r\n                  >\r\n                    <option value=\"python\">Python</option>\r\n                    <option value=\"javascript\">JavaScript</option>\r\n                    <option value=\"java\">Java</option>\r\n                    <option value=\"cpp\">C++</option>\r\n                    <option value=\"csharp\">C#</option>\r\n                  </select>\r\n                </div>\r\n                <Editor\r\n                  height=\"400px\"\r\n                  language={language}\r\n                  value={code}\r\n                  onChange={(newValue) => setCode(newValue)}\r\n                  theme=\"vs-dark\"\r\n                />\r\n                <button className=\"submit-btn\" onClick={handleCodeSubmit}>\r\n                  Submit Code\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"submission-results\">\r\n                <h3>Submission Results</h3>\r\n                {isLoading && <div className=\"loading-spinner\"></div>}\r\n                {!isLoading &&\r\n                  submissionResult.length > 0 &&\r\n                  submissionResult.map((result, index) => (\r\n                    <div key={index} className=\"test-case-result\">\r\n                      {result.error ? (\r\n                        <p className=\"error\">{result.error}</p>\r\n                      ) : (\r\n                        <>\r\n                          <p>\r\n                            <strong>Input:</strong> {result.input}\r\n                          </p>\r\n                          <p>\r\n                            <strong>Expected Output:</strong>{\" \"}\r\n                            {result.expected_output}\r\n                          </p>\r\n                          <p>\r\n                            <strong>Your Output:</strong> {result.actual_output}\r\n                          </p>\r\n                          <p className=\"status\">\r\n                            <strong>Status:</strong>\r\n                            {result.status === \"Accepted\" ? (\r\n                              <span className=\"status-accepted\">\r\n                                ✔️ {result.status}\r\n                              </span>\r\n                            ) : (\r\n                              <span className=\"status-rejected\">\r\n                                ❌ {result.status}\r\n                              </span>\r\n                            )}\r\n                          </p>\r\n                          <p>\r\n                            <strong>Execution Time:</strong>{\" \"}\r\n                            {result.execution_time}\r\n                          </p>\r\n                          <p>\r\n                            <strong>Memory:</strong> {result.memory}\r\n                          </p>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n              </div>\r\n\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SolveContest;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}