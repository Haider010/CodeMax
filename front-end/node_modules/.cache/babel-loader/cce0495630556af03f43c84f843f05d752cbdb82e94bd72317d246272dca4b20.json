{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\haide\\\\Desktop\\\\University\\\\db ai\\\\leetcode-project\\\\front-end\\\\src\\\\components\\\\VerifyPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './styles/VerifyPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerifyPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [verificationCode, setVerificationCode] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const [timer, setTimer] = useState(3); // Timer state for 3 seconds countdown\n  const navigate = useNavigate(); // useNavigate for redirection\n\n  useEffect(() => {\n    let interval;\n    if (timer > 0) {\n      interval = setInterval(() => setTimer(prev => prev - 1), 1000);\n    } else if (timer === 0 && message) {\n      // Redirect to login after 3 seconds\n      setTimeout(() => {\n        navigate('/login');\n      }, 3000); // Redirect after 3 seconds\n    }\n    return () => clearInterval(interval);\n  }, [timer, message, navigate]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const payload = {\n      email,\n      code: verificationCode\n    };\n    fetch('http://localhost:5000/verify', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    }).then(response => response.json()).then(data => {\n      if (data.message) {\n        setMessage(data.message);\n        setError('');\n        setTimer(3); // Reset the timer\n      } else {\n        setError(data.error || 'An error occurred');\n        setMessage('');\n      }\n    }).catch(() => setError('Verification failed. Please try again.'));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"verify-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Verify Your Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Verification Code:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: verificationCode,\n          onChange: e => setVerificationCode(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Verify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message success\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this), message && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"timer\",\n      children: [\"Redirecting to login in \", timer, \" seconds...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(VerifyPage, \"4bTRosODAcoYI1371ptqySJsTiE=\", false, function () {\n  return [useNavigate];\n});\n_c = VerifyPage;\nexport default VerifyPage;\nvar _c;\n$RefreshReg$(_c, \"VerifyPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","VerifyPage","_s","email","setEmail","verificationCode","setVerificationCode","message","setMessage","error","setError","timer","setTimer","navigate","interval","setInterval","prev","setTimeout","clearInterval","handleSubmit","e","preventDefault","payload","code","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/haide/Desktop/University/db ai/leetcode-project/front-end/src/components/VerifyPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './styles/VerifyPage.css';\r\n\r\nconst VerifyPage = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [verificationCode, setVerificationCode] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [timer, setTimer] = useState(3); // Timer state for 3 seconds countdown\r\n  const navigate = useNavigate(); // useNavigate for redirection\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n    if (timer > 0) {\r\n      interval = setInterval(() => setTimer((prev) => prev - 1), 1000);\r\n    } else if (timer === 0 && message) {\r\n      // Redirect to login after 3 seconds\r\n      setTimeout(() => {\r\n        navigate('/login');\r\n      }, 3000); // Redirect after 3 seconds\r\n    }\r\n\r\n    return () => clearInterval(interval);\r\n  }, [timer, message, navigate]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const payload = { email, code: verificationCode };\r\n\r\n    fetch('http://localhost:5000/verify', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(payload),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.message) {\r\n          setMessage(data.message);\r\n          setError('');\r\n          setTimer(3); // Reset the timer\r\n        } else {\r\n          setError(data.error || 'An error occurred');\r\n          setMessage('');\r\n        }\r\n      })\r\n      .catch(() => setError('Verification failed. Please try again.'));\r\n  };\r\n\r\n  return (\r\n    <div className=\"verify-page\">\r\n      <h2>Verify Your Email</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Verification Code:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={verificationCode}\r\n            onChange={(e) => setVerificationCode(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Verify</button>\r\n      </form>\r\n\r\n      {message && (\r\n        <p className=\"message success\">{message}</p>\r\n      )}\r\n      {error && <p className=\"message error\">{error}</p>}\r\n\r\n      {/* Display the timer for redirection */}\r\n      {message && !error && (\r\n        <p className=\"timer\">\r\n          Redirecting to login in {timer} seconds...\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerifyPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}