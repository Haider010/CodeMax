{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\haide\\\\Desktop\\\\University\\\\db ai\\\\leetcode-project\\\\front-end\\\\src\\\\components\\\\SolveContest.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getContestProblems } from '../services/api';\n// import './styles/SolveContest.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SolveContest = () => {\n  _s();\n  const {\n    contestId\n  } = useParams();\n  const [problems, setProblems] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    getContestProblems(contestId).then(response => {\n      var _response$data;\n      console.log('API Response:', response.data);\n      if (Array.isArray((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.contest_problem)) {\n        setProblems(response.data.contest_problem);\n      } else {\n        setError('No valid problems found for this contest.');\n      }\n    }).catch(() => setError('Failed to load contest problems.')).finally(() => setLoading(false));\n  }, [contestId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"solve-contest-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contest Problems\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading contest problems...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : problems.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No problems found for this contest.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"problems-list\",\n      children: problems.map(problem => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"problem-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: problem.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: problem.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Points:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), \" \", problem.points]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this)]\n      }, problem.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(SolveContest, \"4MGZoV+umHI9tbgOZNUaqB4n82k=\", false, function () {\n  return [useParams];\n});\n_c = SolveContest;\nexport default SolveContest;\nvar _c;\n$RefreshReg$(_c, \"SolveContest\");","map":{"version":3,"names":["React","useState","useEffect","useParams","getContestProblems","jsxDEV","_jsxDEV","SolveContest","_s","contestId","problems","setProblems","error","setError","loading","setLoading","then","response","_response$data","console","log","data","Array","isArray","contest_problem","catch","finally","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","problem","title","description","points","id","_c","$RefreshReg$"],"sources":["C:/Users/haide/Desktop/University/db ai/leetcode-project/front-end/src/components/SolveContest.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getContestProblems } from '../services/api';\r\n// import './styles/SolveContest.css';\r\n\r\nconst SolveContest = () => {\r\n  const { contestId } = useParams();\r\n  const [problems, setProblems] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    getContestProblems(contestId)\r\n      .then((response) => {\r\n        console.log('API Response:', response.data);\r\n        if (Array.isArray(response.data?.contest_problem)) {\r\n          setProblems(response.data.contest_problem);\r\n        } else {\r\n          setError('No valid problems found for this contest.');\r\n        }\r\n      })\r\n      .catch(() => setError('Failed to load contest problems.'))\r\n      .finally(() => setLoading(false));\r\n  }, [contestId]);\r\n\r\n  return (\r\n    <div className=\"solve-contest-container\">\r\n      <h2>Contest Problems</h2>\r\n      {loading ? (\r\n        <p>Loading contest problems...</p>\r\n      ) : error ? (\r\n        <p className=\"error-message\">{error}</p>\r\n      ) : problems.length === 0 ? (\r\n        <p>No problems found for this contest.</p>\r\n      ) : (\r\n        <div className=\"problems-list\">\r\n          {problems.map((problem) => (\r\n            <div key={problem.id} className=\"problem-card\">\r\n              <h3>{problem.title}</h3>\r\n              <p>{problem.description}</p>\r\n              <p>\r\n                <strong>Points:</strong> {problem.points}\r\n              </p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SolveContest;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}