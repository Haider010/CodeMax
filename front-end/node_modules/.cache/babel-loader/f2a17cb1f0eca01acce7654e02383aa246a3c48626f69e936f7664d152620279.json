{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\haide\\\\Desktop\\\\University\\\\db ai\\\\leetcode-project\\\\front-end\\\\src\\\\components\\\\AiAssist.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './styles/AIAssist.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AIAssist = () => {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [messages, setMessages] = useState([{\n    sender: 'AI',\n    text: 'Hello! How can I assist you today?'\n  }]);\n  const isLoggedIn = localStorage.getItem('userLoggedIn') === 'true'; // Check login status from localStorage\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!isLoggedIn) {\n      alert('You need to log in to send a message!');\n      return;\n    }\n    if (userInput.trim() !== '') {\n      const updatedMessages = [...messages, {\n        sender: 'User',\n        text: userInput\n      }];\n      setMessages(updatedMessages);\n      try {\n        // Make POST request to Flask backend\n        const response = await fetch('http://127.0.0.1:5000/api/get-response', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            message: userInput,\n            conversation_history: updatedMessages.filter(msg => msg.sender === 'User').map(msg => msg.text)\n          })\n        });\n        const data = await response.json();\n        if (data.success) {\n          setMessages([...updatedMessages, {\n            sender: 'AI',\n            text: data.reply\n          }]);\n        } else {\n          setMessages([...updatedMessages, {\n            sender: 'AI',\n            text: 'Sorry, there was an error processing your request.'\n          }]);\n        }\n      } catch (error) {\n        setMessages([...updatedMessages, {\n          sender: 'AI',\n          text: 'Sorry, something went wrong.'\n        }]);\n      }\n      setUserInput('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ai-assist\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"AI Assist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender.toLowerCase()}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [message.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"chat-input-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userInput,\n        onChange: e => setUserInput(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(AIAssist, \"MLvKDP5Jg2xeUc9UyzYcTW63L4g=\");\n_c = AIAssist;\nexport default AIAssist;\nvar _c;\n$RefreshReg$(_c, \"AIAssist\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AIAssist","_s","userInput","setUserInput","messages","setMessages","sender","text","isLoggedIn","localStorage","getItem","handleSubmit","e","preventDefault","alert","trim","updatedMessages","response","fetch","method","headers","body","JSON","stringify","message","conversation_history","filter","msg","map","data","json","success","reply","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","toLowerCase","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/haide/Desktop/University/db ai/leetcode-project/front-end/src/components/AiAssist.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './styles/AIAssist.css';\r\n\r\nconst AIAssist = () => {\r\n  const [userInput, setUserInput] = useState('');\r\n  const [messages, setMessages] = useState([\r\n    { sender: 'AI', text: 'Hello! How can I assist you today?' },\r\n  ]);\r\n\r\n  const isLoggedIn = localStorage.getItem('userLoggedIn') === 'true'; // Check login status from localStorage\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!isLoggedIn) {\r\n      alert('You need to log in to send a message!');\r\n      return;\r\n    }\r\n\r\n    if (userInput.trim() !== '') {\r\n      const updatedMessages = [\r\n        ...messages,\r\n        { sender: 'User', text: userInput },\r\n      ];\r\n      setMessages(updatedMessages);\r\n\r\n      try {\r\n        // Make POST request to Flask backend\r\n        const response = await fetch('http://127.0.0.1:5000/api/get-response', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            message: userInput,\r\n            conversation_history: updatedMessages\r\n              .filter((msg) => msg.sender === 'User')\r\n              .map((msg) => msg.text),\r\n          }),\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if (data.success) {\r\n          setMessages([\r\n            ...updatedMessages,\r\n            { sender: 'AI', text: data.reply },\r\n          ]);\r\n        } else {\r\n          setMessages([\r\n            ...updatedMessages,\r\n            { sender: 'AI', text: 'Sorry, there was an error processing your request.' },\r\n          ]);\r\n        }\r\n      } catch (error) {\r\n        setMessages([\r\n          ...updatedMessages,\r\n          { sender: 'AI', text: 'Sorry, something went wrong.' },\r\n        ]);\r\n      }\r\n\r\n      setUserInput('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"ai-assist\">\r\n      <h2>AI Assist</h2>\r\n      <div className=\"chat-box\">\r\n        {messages.map((message, index) => (\r\n          <div key={index} className={`message ${message.sender.toLowerCase()}`}>\r\n            <span>{message.sender}:</span>\r\n            <p>{message.text}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <form onSubmit={handleSubmit} className=\"chat-input-form\">\r\n        <input\r\n          type=\"text\"\r\n          value={userInput}\r\n          onChange={(e) => setUserInput(e.target.value)}\r\n          placeholder=\"Type your message...\"\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AIAssist;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}